<Application x:Class="STUDENT_VERIFICATION_SYSTEM_THIRD_YEAR_PROJECT.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:Icon="http://metro.mahapps.com/winfx/xaml/iconpacks" 
             xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Classic" 
             xmlns:notifications="clr-namespace:Notification.Wpf.Controls;assembly=Notification.Wpf" 
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             StartupUri="View/WindowsFormView/LoginWD.xaml">

    <Application.Resources>

        <ResourceDictionary>

       


                <!--Title Style-->
                <Style x:Key="titleText" TargetType="TextBlock">
                    <Setter Property="FontSize" Value="36"/>
                    <Setter Property="FontWeight" Value="Bold"/>
                    <Setter Property="TextAlignment" Value="Center"/>
                    <Setter Property="Foreground" Value="#ffffff"/>
                </Style>

                <!--Description Style-->
                <Style x:Key="descriptionText" TargetType="TextBlock">
                    <Setter Property="FontSize" Value="16"/>
                    <Setter Property="LineHeight" Value="28"/>
                    <Setter Property="TextWrapping" Value="Wrap"/>
                    <Setter Property="TextAlignment" Value="Center"/>
                    <Setter Property="Foreground" Value="#ffffff"/>
                </Style>

                <!--SignUp Button Style-->
                <Style x:Key="signUpButton" TargetType="Button">
                    <Setter Property="FontSize" Value="14"/>
                    <Setter Property="Width" Value="170"/>
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Foreground" Value="#fdfefe"/>
                    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border Background="{TemplateBinding Background}" CornerRadius="25" BorderThickness="1" BorderBrush="White" Padding="15">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#e8e8e8"/>
                            <Setter Property="Foreground" Value="DimGray"/>
                        </Trigger>
                        <Trigger Property="IsMouseCaptured" Value="True">
                            <Setter Property="Background" Value="#d9d9d9"/>
                            <Setter Property="Foreground" Value="DimGray"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>


      

                <!--Text Field's Hint Text-->
                <Style x:Key="textHint" TargetType="TextBlock">
                    <Setter Property="FontSize" Value="14"/>
                    <Setter Property="Grid.Column" Value="1"/>
                    <Setter Property="Panel.ZIndex" Value="1"/>
                    <Setter Property="Margin" Value="10 0 0 0"/>
                    <Setter Property="Foreground" Value="#acb0af"/>
                </Style>

                <!--Text Box Styles-->
                <Style x:Key="textbox" TargetType="Control">
                    <Setter Property="FontSize" Value="14"/>
                    <Setter Property="Grid.Column" Value="1"/>
                    <Setter Property="Margin" Value="10 0 0 0"/>
                    <Setter Property="Foreground" Value="#878787"/>
                    <Setter Property="BorderBrush" Value="Transparent"/>
                    <Setter Property="BorderThickness" Value="0"/>
                </Style>

                <!--SignIn Button Style-->
                <Style x:Key="signInButton" TargetType="Button">
                    <Setter Property="FontSize" Value="14"/>
                    <Setter Property="Width" Value="200"/>
                    <Setter Property="Cursor" Value="Hand"/>
                    <Setter Property="Margin" Value="0 20 0 0"/>
                    <Setter Property="Background" Value="#3D7E35"/>
                    <Setter Property="Foreground" Value="#fdfefe"/>
                    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border Background="{TemplateBinding Background}" CornerRadius="25" BorderThickness="1" BorderBrush="#49b7a3" Padding="15">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#3D7E35"/>
                            <Setter Property="Foreground" Value="white"/>
                        </Trigger>
                        <Trigger Property="IsMouseCaptured" Value="True">
                            <Setter Property="Background" Value="#3D7E35"/>
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>

                <!--App Close Icon Style-->
                <Style x:Key="imgClose" TargetType="Image">
                    <Setter Property="Width" Value="30"/>
                    <Setter Property="Height" Value="30"/>
                    <Setter Property="VerticalAlignment" Value="Top"/>
                    <Setter Property="HorizontalAlignment" Value="Right"/>
                    <Setter Property="Margin" Value="0 13 13 0"/>
                    <Setter Property="Opacity" Value=".6"/>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="1.02" ScaleY="1.02"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </Style.Triggers>
                </Style>



                <Style x:Key="DashboardCardStyle1" TargetType="Border">
                <Setter Property="Background" Value="White" />
                <Setter Property="CornerRadius" Value="10" />
                <Setter Property="Margin" Value="10,20,10,90" />
            </Style>







            <Style TargetType="DataGridCell">
                <Style.Triggers>
                    <!-- Trigger for numeric input greater than 100 -->
                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Content}" Value="100">
                        <Setter Property="FontSize" Value="20"/>
                    </DataTrigger>

                    <!-- Trigger for numeric input less than or equal to 100 -->
                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Content}" Value="0">
                        <Setter Property="FontSize" Value="18"/>
                    </DataTrigger>

                    <!-- Trigger for empty or null content -->
                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Content}" Value="{x:Null}">
                        <Setter Property="FontSize" Value="12"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>


            <Style TargetType="Border" x:Key="GradeBorderStyle">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="CornerRadius" Value="8" />
                <Setter Property="Padding" Value="4" />
                <Setter Property="Margin" Value="2" />
                <Setter Property="MaxWidth" Value="50" />
                <Style.Triggers>
                   
                   
                    <DataTrigger Binding="{Binding isGradeValueLow}" Value="False">
                        <Setter Property="Background" Value="#61B15A" />
                    </DataTrigger>
                        <DataTrigger Binding="{Binding IsGradeINC}" Value="True">
                            <Setter Property="Background" Value="#FFBC11" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsGradeNGS}" Value="True">
                            <Setter Property="Background" Value="#FF6969" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsGradeNFE}" Value="True">
                            <Setter Property="Background" Value="#FF6969" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsGradeFAILED}" Value="True">
                            <Setter Property="Background" Value="#FF6969" />
                        </DataTrigger>
                </Style.Triggers>
            </Style>

            <Style TargetType="TextBlock" x:Key="GradeTextBlockStyle">
                <Setter Property="Foreground" Value="Black" />
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Style.Triggers>
                    <DataTrigger Binding="{Binding isGradeValueLow}" Value="True">
                        <Setter Property="Foreground" Value="White" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding isGradeValueLow}" Value="False">
                        <Setter Property="Foreground" Value="White" />
                    </DataTrigger>
                        <DataTrigger Binding="{Binding IsGradeINC}" Value="True">
                            <Setter Property="Foreground" Value="White" />
                    </DataTrigger>
                    </Style.Triggers>
            </Style>




            <Style TargetType="StackPanel" x:Key="ButtonHide">
                <!-- Default background -->
                <Setter Property="Background" Value="Transparent"/>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding IsScholar}" Value="True">
                        <Setter Property="Visibility" Value="Collapsed"/>
                    </DataTrigger>
                        <DataTrigger Binding="{Binding IsScholar4th}" Value="True">
                            <Setter Property="Visibility" Value="Visible"/>
                    </DataTrigger>
                        <DataTrigger Binding="{Binding IsScholar}" Value="False">
                        <Setter Property="Visibility" Value="Visible"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>


            <Style TargetType="Button" x:Key="Retrieve">
                <!-- Default background -->
                <Setter Property="Background" Value="Transparent"/>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding isDeleted}" Value="False">
                        <Setter Property="Visibility" Value="Collapsed"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding isDeleted}" Value="True">
                        <Setter Property="Visibility" Value="Visible"/>
                    </DataTrigger>
                 
                </Style.Triggers>
            </Style>

            <Style TargetType="StackPanel" x:Key="EnrolledSecond">
                    <Setter Property="Visibility" Value="Visible"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsSecondSem}" Value="True">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>



                <Style TargetType="Button">
                <Style.Triggers>
                    <!-- Hide button if IsEncoderDashboard is true -->
                    <DataTrigger Binding="{Binding IsEncoderDashboard}" Value="True">
                        <Setter Property="Visibility" Value="Collapsed" />
                    </DataTrigger>

                    <!-- Show button if IsEncoderDashboard is false -->
                    <DataTrigger Binding="{Binding IsEncoderDashboard}" Value="False">
                        <Setter Property="Visibility" Value="Visible" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>



            <!-- Textboxes template-->
            <Style x:Key="TextBoxes" TargetType="TextBox">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Height" Value="25"/>
                <Setter Property="FontSize" Value="12"/>
                <Setter Property="Padding" Value="5,0,5,0"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TextBox">
                            <Border Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="0,0,0,2"
                            CornerRadius="0">
                                <ScrollViewer x:Name="PART_ContentHost"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>


                <!-- Textboxes template-->
                <Style x:Key="TextBoxesForm" TargetType="TextBox">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Height" Value="25"/>
                    <Setter Property="FontSize" Value="12"/>
                    <Setter Property="Padding" Value="5,0,5,0"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                    <Setter Property="HorizontalContentAlignment" Value="Left"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="TextBox">
                                <Border Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="1"
                            CornerRadius="7">
                                    <ScrollViewer x:Name="PART_ContentHost"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>




                    <!--Password box-->
            <Style x:Key="PasswordBoxes" TargetType="PasswordBox">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Height" Value="25"/>
                <Setter Property="FontSize" Value="12"/>
                <Setter Property="Padding" Value="5,0,5,0"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="PasswordBox">
                            <Border Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="0,0,0,2" 
                            CornerRadius="0">
                                <ScrollViewer x:Name="PART_ContentHost"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>




              <!--Submit button template-->
              <Style x:Key="SubmitButton" TargetType="Button">
                <Setter Property="Background" Value="#3D7E35"/>
                <Setter Property="Foreground" Value="#ffff"/>
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="Height" Value="25"/>
                <Setter Property="Width" Value="300"/>
                <Setter Property="HorizontalAlignment" Value="Right"/>
                <Setter Property="Margin" Value="15 3"/>
                <Setter Property="FontSize" Value="10"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" 
                                     BorderBrush="{TemplateBinding BorderBrush}" 
                                     BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="7">
                                <ContentPresenter VerticalAlignment="Center" 
                                      HorizontalAlignment="Center"
 
                                         ContentSource="Content"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#4CAF50"/>
                        <Setter Property="Foreground" Value="#ffffff"/>
                    </Trigger>
                </Style.Triggers>
              </Style>




            <!--Submit button template-->
            <Style x:Key="RefreshButton" TargetType="Button">
                <Setter Property="Background" Value="White"/>
                <Setter Property="Foreground" Value="Gray"/>
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="Height" Value="25"/>
                <Setter Property="Width" Value="25"/>
                <Setter Property="HorizontalAlignment" Value="Right"/>
                <Setter Property="Margin" Value="15 3"/>
                <Setter Property="FontSize" Value="10"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" 
                                 BorderBrush="{TemplateBinding BorderBrush}" 
                                 BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="12">
                                <ContentPresenter VerticalAlignment="Center" 
                                  HorizontalAlignment="Center"
 
                                     ContentSource="Content"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#4CAF50"/>
                        <Setter Property="Foreground" Value="#ffffff"/>
                    </Trigger>
                </Style.Triggers>
            </Style>




            <!--Submit button template-->
            <Style x:Key="ClearButton" TargetType="Button">
                <Setter Property="Background" Value="#FFFF"/>
                <Setter Property="Foreground" Value="#4CAF50"/>
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="Height" Value="25"/>
                <Setter Property="Width" Value="300"/>
                <Setter Property="HorizontalAlignment" Value="Right"/>
                <Setter Property="Margin" Value="15 3"/>
                <Setter Property="FontSize" Value="10"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}"
                       CornerRadius="7">
                                <ContentPresenter VerticalAlignment="Center" 
                             HorizontalAlignment="Center"
 
                                ContentSource="Content"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#4CAF50"/>
                        <Setter Property="Foreground" Value="#ffffff"/>
                    </Trigger>
                </Style.Triggers>
            </Style>



            <!--Submit button template-->
                <Style x:Key="Automation" TargetType="Button">
                    <Setter Property="Background" Value="#3D7E35"/>
                    <Setter Property="Foreground" Value="#ffff"/>
                    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                    <Setter Property="Height" Value="25"/>
                    <Setter Property="Width" Value="300"/>
                    <Setter Property="HorizontalAlignment" Value="Right"/>
                    <Setter Property="Margin" Value="15 3"/>
                    <Setter Property="FontSize" Value="10"/>
                    <Setter Property="Cursor" Value="Hand"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border Background="{TemplateBinding Background}" 
                               BorderBrush="{TemplateBinding BorderBrush}" 
                               BorderThickness="{TemplateBinding BorderThickness}"
                          CornerRadius="6">
                                    <ContentPresenter VerticalAlignment="Center" 
                                HorizontalAlignment="Center"
 
                                   ContentSource="Content"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#ffffff"/>
                            <Setter Property="Foreground" Value="#3D7E35"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>


                <!-- Menu Button template-->
            <Style x:Key="menuButton" TargetType="Button">
                <Setter Property="Background" Value="#3D7E35"/>
                 <Setter Property="Foreground" Value="#F4F5F6"/>
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="Height" Value="35"/>
                <Setter Property="Margin" Value="15 3"/>
                <Setter Property="FontSize" Value="13"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" 
                            CornerRadius="7" 
                            BorderBrush="Transparent" 
                            BorderThickness="1">
                                <ContentPresenter VerticalAlignment="Center" 
                                          HorizontalAlignment="Left"
                                          ContentSource="Content"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#313622"/>
                        <Setter Property="Foreground" Value="#F4F5F6"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!-- Menu Button template-->


            <Style x:Key="menuButton2" TargetType="Button">
                    <Setter Property="Background" Value="#F4F5F6"/>
                    <Setter Property="Foreground" Value="Gray"/>
                    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                    <Setter Property="Height" Value="35"/>
                    <Setter Property="Margin" Value="15 3"/>
                    <Setter Property="FontSize" Value="13"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border Background="{TemplateBinding Background}" 
                            CornerRadius="7" 
                            BorderBrush="Transparent" 
                            BorderThickness="1">
                                    <ContentPresenter VerticalAlignment="Center" 
                                          HorizontalAlignment="Left"
                                          ContentSource="Content"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#3D7E35"/>
                            <Setter Property="Foreground" Value="#F4F5F6"/>
                        </Trigger>
                    </Style.Triggers>
            </Style>



            <Style x:Key="menuButtonIcon" TargetType="Icon:PackIconMaterial">
                <Setter Property="Margin" Value="20 2 20 0" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="Width" Value="15" />
                <Setter Property="Height" Value="15" />
   
            </Style>



            <!--Dropshadow-->
            <DropShadowEffect x:Key="dropShadow"
                        BlurRadius="10"
                        ShadowDepth="5"
                        Opacity="0.5"
                        Color="LightGray"/>


            <DropShadowEffect x:Key="formShadow"
                Direction="-130" BlurRadius="30" ShadowDepth="5" Opacity="0.1"/>


            <!--#region DataGrid Style-->

            <Style x:Key="{ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}" TargetType="{x:Type Button}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid>
                                <Rectangle x:Name="Border" Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" SnapsToDevicePixels="True"/>
                                <Polygon x:Name="Arrow" Fill="Black" HorizontalAlignment="Right" Margin="8,8,3,3" Opacity="0.15" Points="0,10 10,10 10,0" Stretch="Uniform" VerticalAlignment="Bottom"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Stroke" TargetName="Border" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Fill" TargetName="Border" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Visibility" TargetName="Arrow" Value="Collapsed"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="DataGridStyle1" TargetType="{x:Type DataGrid}">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground" Value="#222528"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected"/>
                <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
                <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
                <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                <Setter Property="AutoGenerateColumns" Value="False" />
                <Setter Property="HeadersVisibility" Value="Column" />
                <Setter Property="Margin" Value="0 10 0 0" />
                <Setter Property="Grid.Row" Value="5" />
                <Setter Property="SelectionMode" Value="Single" />
                <Setter Property="SelectionUnit" Value="FullRow" />
                <Setter Property="CanUserAddRows" Value="False" />
                <Setter Property="CanUserDeleteRows" Value="False" />
                <Setter Property="CanUserReorderColumns" Value="False" />
                <Setter Property="CanUserResizeRows" Value="False" />
                <Setter Property="FontSize" Value="15" />
                <Setter Property="GridLinesVisibility" Value="None" />
                <Setter Property="ColumnWidth" Value="*" />

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DataGrid}">
                            <Border Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                                <ScrollViewer x:Name="DG_ScrollViewer" Focusable="false">
                                    <ScrollViewer.Template>
                                        <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                </Grid.ColumnDefinitions>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="*"/>
                                                    <RowDefinition Height="Auto"/>
                                                </Grid.RowDefinitions>
                                                <Button Command="{x:Static DataGrid.SelectAllCommand}" Focusable="false" Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}}" Visibility="{Binding HeadersVisibility, Converter={x:Static DataGrid.HeadersVisibilityConverter}, ConverterParameter={x:Static DataGridHeadersVisibility.All}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                                <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter" Grid.Column="1" Visibility="{Binding HeadersVisibility, Converter={x:Static DataGrid.HeadersVisibilityConverter}, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                                <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" Grid.ColumnSpan="2" CanContentScroll="{TemplateBinding CanContentScroll}" Grid.Row="1"/>
                                                <ScrollBar x:Name="PART_VerticalScrollBar" Grid.Column="2" Maximum="{TemplateBinding ScrollableHeight}" Orientation="Vertical" Grid.Row="1" ViewportSize="{TemplateBinding ViewportHeight}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                                                <Grid Grid.Column="1" Grid.Row="2">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                                        <ColumnDefinition Width="*"/>
                                                    </Grid.ColumnDefinitions>
                                                    <ScrollBar x:Name="PART_HorizontalScrollBar" Grid.Column="1" Maximum="{TemplateBinding ScrollableWidth}" Orientation="Horizontal" ViewportSize="{TemplateBinding ViewportWidth}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                                                </Grid>
                                            </Grid>
                                        </ControlTemplate>
                                    </ScrollViewer.Template>
                                    <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </ScrollViewer>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsGrouping" Value="true"/>
                            <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                        </MultiTrigger.Conditions>
                        <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                    </MultiTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="DataGridRowStyle1" TargetType="{x:Type DataGridRow}">
                <Setter Property="Margin" Value="0 4 0 0" />
                <Setter Property="Background" Value="#FFFFFF"/>
                <Setter Property="SnapsToDevicePixels" Value="true"/>
                <Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
                <Setter Property="ValidationErrorTemplate">
                    <Setter.Value>
                        <ControlTemplate>
                            <TextBlock Foreground="Red" Margin="2,0,0,0" Text="!" VerticalAlignment="Center"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DataGridRow}">
                            <Border x:Name="DGR_Border" Padding="0 8" CornerRadius="5" Background="{TemplateBinding Background}" BorderThickness="0" SnapsToDevicePixels="True">
                                <SelectiveScrollingGrid>
                                    <SelectiveScrollingGrid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </SelectiveScrollingGrid.ColumnDefinitions>
                                    <SelectiveScrollingGrid.RowDefinitions>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="Auto"/>
                                    </SelectiveScrollingGrid.RowDefinitions>
                                    <DataGridCellsPresenter Grid.Column="1" ItemsPanel="{TemplateBinding ItemsPanel}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    <DataGridDetailsPresenter Grid.Column="1" Grid.Row="1" SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding AreRowDetailsFrozen, Converter={x:Static DataGrid.RowDetailsScrollingConverter}, ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Visibility="{TemplateBinding DetailsVisibility}"/>
                                    <DataGridRowHeader Grid.RowSpan="2" SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical" Visibility="{Binding HeadersVisibility, Converter={x:Static DataGrid.HeadersVisibilityConverter}, ConverterParameter={x:Static DataGridHeadersVisibility.Row}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                </SelectiveScrollingGrid>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#3E7A35"/>
                        <Setter Property="Foreground" Value="#ffffff"/>
                    </Trigger>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="Background" Value="#3E7A35"/>
                        <Setter Property="Foreground" Value="#ffffff"/>
                    </Trigger>




                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsSelected" Value="true"/>
                            <Condition Property="Selector.IsSelectionActive" Value="false"/>
                        </MultiTrigger.Conditions>
                        <Setter Property="Background" Value="#dfdfdf"/>
                    </MultiTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="DataGridCellStyle1" TargetType="{x:Type DataGridCell}">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="Margin" Value="15 0" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DataGridCell}">
                            <Border Background="{TemplateBinding Background}" BorderThickness="0" SnapsToDevicePixels="True">
                                <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="ColumnHeaderGripperStyle" TargetType="{x:Type Thumb}">
                <Setter Property="Width" Value="8"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Cursor" Value="SizeWE"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">
                            <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="DataGridColumnHeaderStyle1" TargetType="{x:Type DataGridColumnHeader}">
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Foreground" Value="#69717D" />
                <Setter Property="Margin" Value="15 0 15 10" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                            <Grid>
                                <theme:DataGridHeaderBorder Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" IsClickable="{TemplateBinding CanUserSort}" IsPressed="{TemplateBinding IsPressed}" IsHovered="{TemplateBinding IsMouseOver}" Padding="{TemplateBinding Padding}" SeparatorBrush="{TemplateBinding SeparatorBrush}" SortDirection="{TemplateBinding SortDirection}" SeparatorVisibility="{TemplateBinding SeparatorVisibility}">
                                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </theme:DataGridHeaderBorder>
                                <Thumb x:Name="PART_LeftHeaderGripper" HorizontalAlignment="Left" Style="{StaticResource ColumnHeaderGripperStyle}"/>
                                <Thumb x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right" Style="{StaticResource ColumnHeaderGripperStyle}"/>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--#endregion-->


            <!--#region Check Box Style-->
            <SolidColorBrush x:Key="OptionMark.Static.Background" Color="#FFFFFFFF"/>
            <SolidColorBrush x:Key="OptionMark.Static.Border" Color="#FF707070"/>
            <SolidColorBrush x:Key="OptionMark.Static.Glyph" Color="#FF212121"/>
            <SolidColorBrush x:Key="OptionMark.MouseOver.Background" Color="#FFF3F9FF"/>
            <SolidColorBrush x:Key="OptionMark.MouseOver.Border" Color="#FF5593FF"/>
            <SolidColorBrush x:Key="OptionMark.MouseOver.Glyph" Color="#FF212121"/>
            <SolidColorBrush x:Key="OptionMark.Pressed.Background" Color="#FFD9ECFF"/>
            <SolidColorBrush x:Key="OptionMark.Pressed.Border" Color="#FF3C77DD"/>
            <SolidColorBrush x:Key="OptionMark.Pressed.Glyph" Color="#FF212121"/>
            <SolidColorBrush x:Key="OptionMark.Disabled.Background" Color="#FFE6E6E6"/>
            <SolidColorBrush x:Key="OptionMark.Disabled.Border" Color="#FFBCBCBC"/>
            <SolidColorBrush x:Key="OptionMark.Disabled.Glyph" Color="#FF707070"/>
            <Style x:Key="CheckBoxStyle1" TargetType="{x:Type CheckBox}">
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="Background" Value="{StaticResource OptionMark.Static.Background}"/>
                <Setter Property="BorderBrush" Value="#DAE2EA"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type CheckBox}">
                            <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Border x:Name="checkBoxBorder" CornerRadius="3" Padding="1" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                    <Grid x:Name="markGrid">
                                        <Path x:Name="optionMark" Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z " Fill="{StaticResource OptionMark.Static.Glyph}" Margin="1" Opacity="0" Stretch="None"/>
                                        <Rectangle x:Name="indeterminateMark" Fill="{StaticResource OptionMark.Static.Glyph}" Margin="2" Opacity="0"/>
                                    </Grid>
                                </Border>
                                <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="HasContent" Value="true">
                                    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                    <Setter Property="Padding" Value="4,-1,0,0"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="#9575CD"/>
                                    <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
                                    <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Border}"/>
                                    <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
                                    <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="#9575CD"/>
                                    <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
                                    <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="true">
                                    <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                                    <Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="{x:Null}">
                                    <Setter Property="Opacity" TargetName="optionMark" Value="0"/>
                                    <Setter Property="Opacity" TargetName="indeterminateMark" Value="1"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <!--#endregion-->




            <!--grid edit button-->
            <Style x:Key="gridEditButton" TargetType="Button">
                <Setter Property="Background" Value="#3D7E35" />
                <Setter Property="BorderBrush" Value="#3D7E35" />
                <Setter Property="Foreground" Value="#ffffff" />
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="Template" >
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" Padding="5" BorderThickness="1" CornerRadius="5">
                                <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#3E7A35" />

                    </Trigger>
                </Style.Triggers>
            </Style>

            <!--grid remove button-->

            <Style x:Key="gridRemoveButton" TargetType="Button" BasedOn="{StaticResource gridEditButton}">
                <Setter Property="Background" Value="#D32F2F" />
                <Setter Property="BorderBrush" Value="#B71C1C" />
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#F44336" />
                    </Trigger>
                </Style.Triggers>
            </Style>


            <!--grid remove button-->

            <Style x:Key="gridUndoButton" TargetType="Button" BasedOn="{StaticResource gridEditButton}">
                <Setter Property="Background" Value="#D32F2F" />
                <Setter Property="BorderBrush" Value="#B71C1C" />
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#F44336" />
                    </Trigger>
                </Style.Triggers>
            </Style>


            <!--Icon style-->
            <Style x:Key="gridButtonIcon" TargetType="Icon:PackIconMaterial">
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="Width" Value="12" />
                <Setter Property="Height" Value="12" />
            </Style>







            <!--Button Style in windows style-->

            <Style x:Key="MinimizeButtonStyle" TargetType="Button">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Foreground" Value="#ffff" />
                <Setter Property="FontSize" Value="13" />
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Width="20" Height="20"
                                CornerRadius="10"
                                Background="{TemplateBinding Background}">
                                <ContentPresenter VerticalAlignment="Center"
                                              HorizontalAlignment="Center" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#3D7E35" />
                        <Setter Property="Foreground" Value="White" />

                    </Trigger>
                </Style.Triggers>
            </Style>

            <!--Icons-->

            <Style x:Key="WindowControlIcon" TargetType="Icon:PackIconMaterial">
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="Width" Value="12" />
                <Setter Property="Height" Value="12" />
            </Style>



            
            
            <!-- Print-->
            <Style x:Key="DataGridColumnHeaderStyle2" TargetType="{x:Type DataGridColumnHeader}">
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="FontSize" Value="10"/>
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Margin" Value="15 0 15 10" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                            <Grid>
                                <theme:DataGridHeaderBorder Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" IsClickable="{TemplateBinding CanUserSort}" IsPressed="{TemplateBinding IsPressed}" IsHovered="{TemplateBinding IsMouseOver}" Padding="{TemplateBinding Padding}" SeparatorBrush="{TemplateBinding SeparatorBrush}" SortDirection="{TemplateBinding SortDirection}" SeparatorVisibility="{TemplateBinding SeparatorVisibility}">
                                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </theme:DataGridHeaderBorder>
                                <Thumb x:Name="PART_LeftHeaderGripper" HorizontalAlignment="Left" Style="{StaticResource ColumnHeaderGripperStyle}"/>
                                <Thumb x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right" Style="{StaticResource ColumnHeaderGripperStyle}"/>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
            
            
           <!--Form design -->

            <!-- Green color palette based on #3D7E35 -->
            <SolidColorBrush x:Key="PrimaryColor" Color="#3D7E35"/>
            <SolidColorBrush x:Key="PrimaryLightColor" Color="#C5E1C1"/>
            <SolidColorBrush x:Key="PrimaryDarkColor" Color="#2D5D26"/>
            <SolidColorBrush x:Key="AccentColor" Color="#FF9800"/>
            <SolidColorBrush x:Key="TextPrimaryColor" Color="#212121"/>
            <SolidColorBrush x:Key="TextSecondaryColor" Color="#5D5D5D"/>
            <SolidColorBrush x:Key="DividerColor" Color="#BDBDBD"/>
            <SolidColorBrush x:Key="BackgroundColor" Color="#F9FBF8"/>

            <!-- Text box style -->
            <Style x:Key="ModernTextBox" TargetType="{x:Type TextBox}">
                <Setter Property="Height" Value="45"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="Padding" Value="12,8"/>
                <Setter Property="Background" Value="White"/>
                <Setter Property="BorderBrush" Value="{StaticResource DividerColor}"/>
                <Setter Property="BorderThickness" Value="0,0,0,1"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Margin" Value="0,0,0,20"/>
                <Style.Triggers>
                    <Trigger Property="IsFocused" Value="True">
                        <Setter Property="BorderBrush" Value="{StaticResource PrimaryColor}"/>
                        <Setter Property="BorderThickness" Value="0,0,0,2"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!-- Label style -->
            <Style x:Key="FieldLabel" TargetType="{x:Type TextBlock}">
                <Setter Property="FontSize" Value="13"/>
                <Setter Property="FontWeight" Value="Medium"/>
                <Setter Property="Foreground" Value="{StaticResource TextSecondaryColor}"/>
                <Setter Property="Margin" Value="0,0,0,5"/>
            </Style>

            <!-- ComboBox style -->
            <Style x:Key="ModernComboBox" TargetType="{x:Type ComboBox}">
                <Setter Property="Height" Value="45"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="Padding" Value="10,8"/>
                <Setter Property="Background" Value="White"/>
                <Setter Property="BorderBrush" Value="{StaticResource DividerColor}"/>
                <Setter Property="BorderThickness" Value="0,0,0,1"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Margin" Value="0,0,0,20"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="BorderBrush" Value="{StaticResource PrimaryColor}"/>
                    </Trigger>
                    <Trigger Property="IsDropDownOpen" Value="True">
                        <Setter Property="BorderBrush" Value="{StaticResource PrimaryColor}"/>
                        <Setter Property="BorderThickness" Value="0,0,0,2"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!-- Button style -->
            <Style x:Key="ModernButton" TargetType="{x:Type Button}">
                <Setter Property="Background" Value="{StaticResource PrimaryColor}"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="FontWeight" Value="Medium"/>
                <Setter Property="Height" Value="45"/>
                <Setter Property="Padding" Value="20,0"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border CornerRadius="4" 
                                Background="{TemplateBinding Background}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                BorderBrush="{TemplateBinding BorderBrush}">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="{StaticResource PrimaryDarkColor}"/>
                                    <Setter Property="Effect">
                                        <Setter.Value>
                                            <DropShadowEffect BlurRadius="8" Direction="330" Opacity="0.3" ShadowDepth="2" Color="#757575"/>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" Value="{StaticResource PrimaryDarkColor}"/>
                                    <Setter Property="Effect">
                                        <Setter.Value>
                                            <DropShadowEffect BlurRadius="4" Direction="330" Opacity="0.3" ShadowDepth="1" Color="#757575"/>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- Small button style for photo selection -->
            <Style x:Key="OutlinedButton" TargetType="{x:Type Button}" BasedOn="{StaticResource ModernButton}">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground" Value="{StaticResource PrimaryColor}"/>
                <Setter Property="BorderBrush" Value="{StaticResource PrimaryColor}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Height" Value="35"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{StaticResource PrimaryLightColor}"/>
                        <Setter Property="BorderBrush" Value="{StaticResource PrimaryDarkColor}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!-- Card style -->
            <Style x:Key="CardPanel" TargetType="{x:Type Border}">
                <Setter Property="Background" Value="White"/>
                <Setter Property="CornerRadius" Value="8"/>
                <Setter Property="Padding" Value="25"/>
                <Setter Property="Margin" Value="0,0,0,15"/>
                <Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect BlurRadius="10" Direction="315" Opacity="0.2" ShadowDepth="3" Color="#AAAAAA"/>
                    </Setter.Value>
                </Setter>
            </Style>

        </ResourceDictionary>


    </Application.Resources>
</Application>
